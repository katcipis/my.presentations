Responsible Software Development
TODO
22 Jun 2015
Tags: software development, agile, TDD, Refactoring, design, architecture

Tiago Katcipis
tiago.katcipis@neoway.com.br
http://github.com/katcipis


* Agenda

- Who is responsible for the quality of the software ?
- How to handle the responsibility ?
- Ruthless testing


* Who is responsible for the quality of the software ?


* What is quality ?

- Quality is something that depends on scope
- The scope here is functional
- Does the new feature work properly ?
- Any of the previous features broke ?
- We are dividing to conquer :-)


* Should be QA ?


* Manual Testing: The dream

.image ./img/assume-dev-is-propotional-to-test.jpg _ 700


* Manual Testing: Reality

.image ./img/manual-test-is-unsustainable.jpg _ 700


* Manual Testing: Brave fireman

.image ./img/untested-code-gap.jpg _ 700


* Developers are responsible

* Why ?

- Only possible way to scale a system
- The ones that are more involved with the code
- The best way to innovate is by giving freedom
- Freedom without responsibility is just childish
- "You build it you run it" : "You build it you test it"


* Resources / References

- [[http://www.renaissancesoftware.net/blog/archives/206][Manual Test is Unsustainable]]
- [[https://vimeo.com/68375232][Ian Cooper: TDD, where did it all go wrong]]
- [[http://www.se-radio.net/2010/09/episode-167-the-history-of-junit-and-the-future-of-testing-with-kent-beck/][The History of JUnit and the Future of Testing with Kent Beck]]
